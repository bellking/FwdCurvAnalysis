# }
av <- rollapplyr(d,
width = wid  ,
FUN = function(zz) summary(lm(y ~ x, data = as.data.frame(zz),na.action = na.omit))$coefficients[2,],
by = freq, by.column=FALSE,
partial = F)
# av <- as.data.frame(av)
# av$Qdate <- rownames(av)
# return(av)
}
rr <- createCorrelation(fwdStrBasicInfo,'2008-03-01')
View(rr)
rr$..1
rr$..1
rr[,2]
View(rr)
rr$..1[,1]
rr$..1[,2]
rr$..1[,4]
getCorrelationAnalysisInfo <- function(col1, col2, qd, wid = 30, freq = 5)
{
# browser()
d <- data.frame(y = col1, x = col2)
d <- zoo(d, qd)
# if (length(col1) < freq)
# {
#   return(NULL)
# }
av <- rollapplyr(d,
width = wid  ,
FUN = function(zz) summary(lm(y ~ x, data = as.data.frame(zz),na.action = na.omit))$coefficients[2,],
by = freq, by.column=FALSE,
partial = F)
av <- as.data.frame(av)
av$Qdate <- rownames(av)
return(av)
}
getCorrelationAnalysisInfo(ff$FwdPriceDif,ff$SpotPriceDif,ff$QDate,30,3)
rr1 <- getCorrelationAnalysisInfo(ff$FwdPriceDif,ff$SpotPriceDif,ff$QDate,30,3)
View(rr1)
str(rr1)
rr <- createCorrelation(fwdStrBasicInfo,'2008-03-01')
help(ddply)
help(do.call)
createCorrelation <- function(fwdStrBasicInfo, historyPeriod.start, historyPeriod.end)
{
if (missing(historyPeriod.start))
historyPeriod.start <- min(fwdStrBasicInfo$QDate)
if (missing(historyPeriod.end))
historyPeriod.end <- max(fwdStrBasicInfo$QDate)
curveChangeAnaylsis <- fwdStrBasicInfo[fwdStrBasicInfo$QYM >= historyPeriod.start & fwdStrBasicInfo$QYM <= historyPeriod.end & fwdStrBasicInfo$MMDiff <31,]
curveChangeAnaylsis = ddply(curveChangeAnaylsis, .(FwdYM), mutate,
SpotPriceDif = c(0, diff(SpotPrice, lag =1)),
FwdPriceDif = c(0, diff(FwdPrice, lag = 1)))
# #  curveChangeAnaylsis$Direction <- 'UP'
# #  curveChangeAnaylsis[curveChangeAnaylsis$SpotPriceDif < 0 ,]$Direction <- 'DW'
#   curveChangeAnaylsis$
processData <- curveChangeAnaylsis[curveChangeAnaylsis$MMDiff ==0,]
curveChangeAnaylsis.summary <- getCorrelationAnalysisInfo(processData$FwdPriceDif,processData$SpotPriceDif,processData$QDate)
for(i in c(1:30))
{
processData <- curveChangeAnaylsis[curveChangeAnaylsis$MMDiff == i,]
curveChangeAnaylsis.summary <- rbind(curveChangeAnaylsis.summary, getCorrelationAnalysisInfo(processData$FwdPriceDif,processData$SpotPriceDif,processData$QDate))
}
return(curveChangeAnaylsis.summary)
# curveChangeAnaylsis.summary <- ddply(curveChangeAnaylsis, .(MMDiff) , summarise,
#                                           getCorrelationAnalysisInfo(FwdPriceDif,SpotPriceDif,QDate))
#
#   curveChangeAnaylsis.summary <- ddply(curveChangeAnaylsis.summary, .(QYM) , mutate,
#                        a                 correlRatio = correl / correl[1])
}
rr <- createCorrelation(fwdStrBasicInfo,'2008-03-01')
View(rr)
SetofAnalyzingPrice <- c('MOPS_FO180')
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
for(i in 1:length(SetofAnalyzingPrice))
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
fwdHistory <- getDataFromDB(currentPriceId,'F')
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
#writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
plotFwdByMDiff.Daily <- drawContourCurve(fwdStrBasicInfo)
print(plotFwdByMDiff.Daily)
createFwdStrInfo <- function(fwdStrBasicInfo)
{
#structure for daily data
fwdStrBasicInfo <- ddply(fwdStrBasicInfo, .(QDate), mutate,
FwdDelta = FwdPrice[1] - FwdPrice ,
FwdDelta2 =FwdPrice[2] - FwdPrice ,
LongTermDelta = FwdPrice[1] - FwdPrice[max(index(FwdPrice))] ,
FwdDeltaWPrev = c(0, - diff(FwdPrice, lag = 1))
#FwdDeltaWPrev = c(0,FwdPrice[1:max(index(FwdPrice))-1] - FwdPrice[2:max(index(FwdPrice))])
)
# add more structure data for daily average
fwdStrBasicInfo$SlopeFromOrg <- 0
fwdStrBasicInfo[fwdStrBasicInfo$MMDiff > 0 ,]$SlopeFromOrg <- fwdStrBasicInfo[fwdStrBasicInfo$MMDiff > 0 ,'FwdDelta'] / fwdStrBasicInfo[fwdStrBasicInfo$MMDiff > 0 ,'MMDiff']
fwdStrBasicInfo$LongTermStr <- 'BKWD'
fwdStrBasicInfo[fwdStrBasicInfo$LongTermDelta < 0,]$LongTermStr <- 'CNTG'
#fwdStrBasicInfo[fwdStrBasicInfo$LongTermDelta > 0,]$LongTermStr <- 'BKWD'
fwdStrBasicInfo
}
createCorrelation <- function(fwdStrBasicInfo, historyPeriod.start, historyPeriod.end, wid = 30, freq = 5)
{
if (missing(historyPeriod.start))
historyPeriod.start <- min(fwdStrBasicInfo$QDate)
if (missing(historyPeriod.end))
historyPeriod.end <- max(fwdStrBasicInfo$QDate)
curveChangeAnaylsis <- fwdStrBasicInfo[fwdStrBasicInfo$QYM >= historyPeriod.start & fwdStrBasicInfo$QYM <= historyPeriod.end & fwdStrBasicInfo$MMDiff <31,]
curveChangeAnaylsis = ddply(curveChangeAnaylsis, .(FwdYM), mutate,
SpotPriceDif = c(0, diff(SpotPrice, lag =1)),
FwdPriceDif = c(0, diff(FwdPrice, lag = 1)))
# #  curveChangeAnaylsis$Direction <- 'UP'
# #  curveChangeAnaylsis[curveChangeAnaylsis$SpotPriceDif < 0 ,]$Direction <- 'DW'
#   curveChangeAnaylsis$
processData <- curveChangeAnaylsis[curveChangeAnaylsis$MMDiff ==0,]
curveChangeAnaylsis.summary <- getCorrelationAnalysisInfo(processData$FwdPriceDif,processData$SpotPriceDif,processData$QDate, wid, freq)
curveChangeAnaylsis.summary$MMDiff <- 0
for(i in c(1:30))
{
processData <- curveChangeAnaylsis[curveChangeAnaylsis$MMDiff == i,]
analysisResult <- getCorrelationAnalysisInfo(processData$FwdPriceDif,processData$SpotPriceDif,processData$QDate, wid, freq)
analysisResult$MMDiff <- i
curveChangeAnaylsis.summary <- rbind(curveChangeAnaylsis.summary, analysisResult)
}
return(curveChangeAnaylsis.summary)
# curveChangeAnaylsis.summary <- ddply(curveChangeAnaylsis, .(MMDiff) , summarise,
#                                           getCorrelationAnalysisInfo(FwdPriceDif,SpotPriceDif,QDate))
#
#   curveChangeAnaylsis.summary <- ddply(curveChangeAnaylsis.summary, .(QYM) , mutate,
#                        a                 correlRatio = correl / correl[1])
}
getCorrelationAnalysisInfo <- function(col1, col2, qd, wid = 30, freq = 5)
{
# browser()
d <- data.frame(y = col1, x = col2)
d <- zoo(d, qd)
# if (length(col1) < freq)
# {
#   return(NULL)
# }
av <- rollapplyr(d,
width = wid  ,
FUN = function(zz) summary(lm(y ~ x, data = as.data.frame(zz),na.action = na.omit))$coefficients[2,],
by = freq, by.column=FALSE,
partial = F)
av <- as.data.frame(av)
av$QDate <- as.Date(rownames(av))
return(av)
}
#
# getCorrelationAnalysisInfo <- function(priceInfo, compCol, wid , freq)
# {
#   d <- zoo(priceInfo[,compCol], priceInfo$QDate)
#   colnames(d) <- c('y','x')
#   rollapplyr(d,
#              width = wid  ,
#              FUN = function(zz) summary(lm(y ~ x, data = as.data.frame(zz),na.action = na.omit))$coefficients[2,],
#              by = freq, by.column=FALSE,
#              partial = F)
# }
createSlopeAnalysis <- function(fwdStrBasicInfo , breakPoint , historyPeriod.start, historyPeriod.end)
{
if (missing(historyPeriod.start))
historyPeriod.start <- min(fwdStrBasicInfo$QDate)
if (missing(historyPeriod.end))
historyPeriod.end <- max(fwdStrBasicInfo$QDate)
slopeTrend.Analy <- fwdStrBasicInfo[fwdStrBasicInfo$QYM >= historyPeriod.start & fwdStrBasicInfo$QYM <= historyPeriod.end & fwdStrBasicInfo$MMDiff %in% breakPoint,]
missingQDates <- ddply(slopeTrend.Analy, .(QDate) , summarise, nn = length(FwdPrice))
missingQDates <- missingQDates[missingQDates$nn < length(breakPoint),]$QDate
slopeTrend.Analy <- slopeTrend.Analy[!(slopeTrend.Analy$QDate %in% missingQDates),]
slopeTrend.Analy <- ddply(slopeTrend.Analy, .(QDate) , mutate,
PWSlope =  c(0, diff(FwdPrice, lag = 1) / diff(breakPoint, lag = 1)))
slopeTrend.Analy.MAvg <- ddply(slopeTrend.Analy, .(QYM,MMDiff) , summarise,
PWSlope =  mean(PWSlope),
SpotPrice = mean(SpotPrice))
slopeTrend.Analy.MAvg$QDate <- slopeTrend.Analy.MAvg$QYM
return(slopeTrend.Analy)
}
source('D:/My_Workplace/Project/SKTIStudy/FwdStructureAnaly/FwdAnalysisModel/92_FwdStructureInfoFunction.R')
#SetofAnalyzingPrice <- c('DUBAI') 'MOPS_FO380'
#SetofAnalyzingPrice <- c('WTI','BRENT','DUBAI')
SetofAnalyzingPrice <- c('MOPS_FO380')
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
for(i in 1:length(SetofAnalyzingPrice))
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
fwdHistory <- getDataFromDB(currentPriceId,'F')
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
#writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
print(drawSlopeTrend(slopeTrend.Analy))
drawFwdCurvesWithPrice <- function(fwdStrCalInfo,spotPriceData)
{
if (missing(spotPriceData))
{
spotPriceData <- fwdStrCalInfo[,c('QDate','SpotPrice')]
}
plotFwdCurves <-
ggplot(data = fwdStrCalInfo , aes(x = as.Date(FwdYM), y = FwdPrice, group=QDate, color= LongTermStr)) +
geom_line(size=0.5) +
geom_line(data = spotPriceData, size=0.5,  aes(x = as.Date(QDate), y = SpotPrice, group=NULL), color="blue") +
scale_y_continuous(breaks = seq(0,150,10))
}
ggplot_dual_axis <- function(plot1, plot2, which.axis = "y") {
grid.newpage()
# Increase right margin if which.axis == "y"
if(which.axis == "y") plot1 = plot1 + theme(plot.margin = unit(c(0.7, 1.5, 0.4, 0.4), "cm"))
# Extract gtable
g1 = ggplot_gtable(ggplot_build(plot1))
g2 = ggplot_gtable(ggplot_build(plot2))
# Overlap the panel of the second plot on that of the first
pp = c(subset(g1$layout, name == "panel", se = t:r))
g = gtable_add_grob(g1, g2$grobs[[which(g2$layout$name == "panel")]], pp$t, pp$l, pp$b, pp$l)
# Steal axis from second plot and modify
axis.lab = ifelse(which.axis == "x", "axis-b", "axis-l")
ia = which(g2$layout$name == axis.lab)
ga = g2$grobs[[ia]]
ax = ga$children[[2]]
# Switch position of ticks and labels
if(which.axis == "x") ax$heights = rev(ax$heights) else ax$widths = rev(ax$widths)
ax$grobs = rev(ax$grobs)
if(which.axis == "x")
ax$grobs[[2]]$y = ax$grobs[[2]]$y - unit(1, "npc") + unit(0.15, "cm") else
ax$grobs[[1]]$x = ax$grobs[[1]]$x - unit(1, "npc") + unit(0.15, "cm")
# Modify existing row to be tall enough for axis
if(which.axis == "x") g$heights[[2]] = g$heights[g2$layout[ia,]$t]
# Add new row or column for axis label
if(which.axis == "x") {
g = gtable_add_grob(g, ax, 2, 4, 2, 4)
g = gtable_add_rows(g, g2$heights[1], 1)
g = gtable_add_grob(g, g2$grob[[6]], 2, 4, 2, 4)
} else {
g = gtable_add_cols(g, g2$widths[g2$layout[ia, ]$l], length(g$widths) - 1)
g = gtable_add_grob(g, ax, pp$t, length(g$widths) - 1, pp$b)
g = gtable_add_grob(g, g2$grob[[7]], pp$t, length(g$widths), pp$b - 1)
}
#g
# Draw it
grid.draw(g)
}
drawContourCurve <- function(fwdStrBasicInfo,interestPeriod.start,interestPeriod.end)
{
if(missing(interestPeriod.start))
{
interestPeriod.start <- min(fwdStrBasicInfo$QDate)
}
if(missing(interestPeriod.end))
{
interestPeriod.end <- max(fwdStrBasicInfo$QDate)
}
fwdStrBasicInfo <- fwdStrBasicInfo[fwdStrBasicInfo$QDate >= interestPeriod.start & fwdStrBasicInfo$QDate <= interestPeriod.end  , ]
p1 <- ggplot(data = fwdStrBasicInfo, aes(x = QDate, y = FwdDelta, group=MMDiff, color= sprintf("%02d",MMDiff))) +
geom_line(size=0.2) +
geom_line(data = fwdStrBasicInfo , aes(x = QDate, y = SpotPrice / 10, group = NULL), size=1, color = 'blue') +
scale_x_date(date_breaks = "6 months" , date_labels = "%y/%b") +
scale_y_continuous(breaks = seq(-50,50,2.5))
#p2 <- ggplot(data = fwdStrBasicInfo , aes(x = QDate, y = SpotPrice, group = NULL)) +
#  geom_line(size=0.7, color = 'blue') +
#  scale_x_date(date_breaks = "6 months" , date_labels = "%y/%b")
##pp <- ggplot_dual_axis( p1, p2)
}
drawFwdPrice <- function(fwdStrBasicInfo,interestPeriod.start,interestPeriod.end)
{
if(missing(interestPeriod.start))
{
interestPeriod.start <- min(fwdStrBasicInfo$QDate)
}
if(missing(interestPeriod.end))
{
interestPeriod.end <- max(fwdStrBasicInfo$QDate)
}
fwdStrBasicInfo <- fwdStrBasicInfo[fwdStrBasicInfo$QDate >= interestPeriod.start & fwdStrBasicInfo$QDate <= interestPeriod.end  , ]
p1 <- ggplot(data = fwdStrBasicInfo, aes(x = QDate, y = FwdPrice, group=MMDiff, color= sprintf("%02d",MMDiff))) +
geom_line(size=0.2) +
geom_line(data = fwdStrBasicInfo , aes(x = QDate, y = SpotPrice, group = NULL), size=1, color = 'blue') +
scale_x_date(date_breaks = "6 months" , date_labels = "%y/%b") +
scale_y_continuous(breaks = seq(0,200,5))
}
drawCorrelationTrend <- function(correlationInfo, spotPriceInfo, displayMM)
{
corelationTrend <- ggplot(subset(correlationInfo, MMDiff %in% displayMM),
aes(x = QDate, y = Estimate , group = MMDiff, col = sprintf("%02d",MMDiff))) +
geom_line(size=0.5) +
geom_point(size=1.2) +
scale_x_date(date_breaks = "6 months" , date_labels = "%y/%b") +
geom_line(data = spotPriceInfo, size = 1, aes(x = QDate, y = SpotPrice / 100, group = NULL), col = 'red' )
}
drawSlopeTrend <- function(slopeTrend.Plot.Data)
{
slopeTrend.Plot <- ggplot(data = slopeTrend.Plot.Data ,
aes(x = QDate, y = PWSlope , group = MMDiff, col = sprintf("%02d" , MMDiff))) +
geom_line(size=0.5) +
#geom_point(size=1.2) +
geom_line(size = 1, aes(y = SpotPrice / 100, group = NULL), col = 'red' ) +
scale_x_date(date_breaks = "6 months" , date_labels = "%y/%b")
}
source('D:/My_Workplace/Project/SKTIStudy/FwdStructureAnaly/FwdAnalysisModel/92_DrawFunctions.R')
print(drawSlopeTrend(slopeTrend.Analy))
SetofAnalyzingPrice <- c('MOPS_FO180')
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
source('91_DataManipulationFunction.R')
source('92_FwdStructureInfoFunction.R')
for(i in 1:length(SetofAnalyzingPrice))
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
fwdHistory <- getDataFromDB(currentPriceId,'F')
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
#writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
SetofAnalyzingPrice <- c('DUBAI')
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
source('91_DataManipulationFunction.R')
source('92_FwdStructureInfoFunction.R')
for(i in 1:length(SetofAnalyzingPrice))
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
fwdHistory <- getDataFromDB(currentPriceId,'F')
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
#writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
curveChangeAnaylsis.summary
print(plotFwdByMDiff.Daily)
print(drawSlopeTrend(slopeTrend.Analy))
SetofAnalyzingPrice <- c('DUBAI')
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
source('91_DataManipulationFunction.R')
source('92_FwdStructureInfoFunction.R')
for(i in 1:length(SetofAnalyzingPrice))
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
fwdHistory <- getDataFromDB(currentPriceId,'F')
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
#writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
plotFwdByMDiff.Daily <- drawContourCurve(fwdStrBasicInfo)
print(plotFwdByMDiff.Daily)
print(drawSlopeTrend(slopeTrend.Analy))
SetofAnalyzingPrice <- c('MOPS_FO380')
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
source('91_DataManipulationFunction.R')
source('92_FwdStructureInfoFunction.R')
for(i in 1:length(SetofAnalyzingPrice))
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
fwdHistory <- getDataFromDB(currentPriceId,'F')
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
#writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
plotFwdByMDiff.Daily <- drawContourCurve(fwdStrBasicInfo)
print(plotFwdByMDiff.Daily)
print(drawSlopeTrend(slopeTrend.Analy))
print(drawCorrelationTrend(curveChangeAnaylsis.summary,fwdStrBasicInfo,c(3,24)))
#SetofAnalyzingPrice <- c('DUBAI') 'MOPS_FO380'
#SetofAnalyzingPrice <- c('WTI','BRENT','DUBAI')
SetofAnalyzingPrice <- c('MOPS_FO380')
valueScale <- c(1/6.5)
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
source('91_DataManipulationFunction.R')
source('92_FwdStructureInfoFunction.R')
for(i in 1:length(SetofAnalyzingPrice))
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
spotHistory$SpotPrice <- valueScale * spotHistory$SpotPrice
fwdHistory <- getDataFromDB(currentPriceId,'F')
fwdHistory$FwdPrice <- valueScale * fwdHistory$FwdPrice
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
#writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
plotFwdByMDiff.Daily <- drawContourCurve(fwdStrBasicInfo)
print(plotFwdByMDiff.Daily)
print(drawSlopeTrend(slopeTrend.Analy))
print(plotFwdByMDiff.Daily)
print(drawSlopeTrend(slopeTrend.Analy))
curveChangeAnaylsis.summary
colnames(curveChangeAnaylsis.summary)
SetofAnalyzingPrice <- c('WTI','BRENT','DUBAI','MOPS_FO180','MOPS_FO380')
valueScale <- c(1,1,1,1/6.5,1/6.5)
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
source('91_DataManipulationFunction.R')
source('92_FwdStructureInfoFunction.R')
for(i in 1:length(SetofAnalyzingPrice))
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
spotHistory$SpotPrice <- valueScale * spotHistory$SpotPrice
fwdHistory <- getDataFromDB(currentPriceId,'F')
fwdHistory$FwdPrice <- valueScale * fwdHistory$FwdPrice
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
length(valueScale)
#SetofAnalyzingPrice <- c('DUBAI') 'MOPS_FO380'
#SetofAnalyzingPrice <- c('WTI','BRENT','DUBAI')
SetofAnalyzingPrice <- c('WTI','BRENT','DUBAI','MOPS_FO180','MOPS_FO380')
valueScale <- c(1,1,1,1/6.5,1/6.5)
source('0_LoadLibraries.R')
source('90_CommonUtilFunction.R')
source('91_DataManipulationFunction.R')
source('92_FwdStructureInfoFunction.R')
#length(SetofAnalyzingPrice)
for(i in 5:5)
{
currentPriceId <- SetofAnalyzingPrice[i]
spotHistory <- getDataFromDB(currentPriceId,'S')
spotHistory$SpotPrice <- valueScale[i] * spotHistory$SpotPrice
fwdHistory <- getDataFromDB(currentPriceId,'F')
fwdHistory$FwdPrice <- valueScale[i] * fwdHistory$FwdPrice
#source('01_DataPreProcess.R')
fwdStrBasicInfo <- createFwdDataInfo(spotHistory,fwdHistory,currentPriceId)
fwdStrBasicInfo.MonthAvg <- createFwdDataInfo.MAvg(fwdStrBasicInfo)
#source('02_FwdStrDataGen.R')
fwdStrBasicInfo <- createFwdStrInfo(fwdStrBasicInfo)
fwdStrCalInfo.MAvg <- createFwdStrInfo(fwdStrBasicInfo.MonthAvg)
#source('03_StructureAnalysis.R')
curveChangeAnaylsis.summary <- createCorrelation(fwdStrBasicInfo,'2008-03-01', wid = 40, freq = 3)
slopeTrend.Analy <- createSlopeAnalysis(fwdStrBasicInfo, '2008-03-01', breakPoint = breakPoint)
writeResult(currentPriceId,fwdStrCalInfo.MAvg, fwdStrBasicInfo,curveChangeAnaylsis.summary,slopeTrend.Analy)
}
plotFwdByMDiff.Daily <- drawContourCurve(fwdStrBasicInfo)
print(plotFwdByMDiff.Daily)
source('D:/IRMS_R_NEW/IRMS_R/BatchProcessOfFwdStrAnalysis.R', echo=TRUE)
install.packages(lubridate)
install.packages("lubridate")
source('D:/IRMS_R_NEW/IRMS_R/BatchProcessOfFwdStrAnalysis.R', echo=TRUE)
ftpUpload("FwdCurveAnalysis.csv","ftp://168.154.221.100/OPI/FwdCurveAnalysis.csv", userpw="irms_ftp:!@#qwe123")
library(RCurl)
ftpUpload("FwdCurveAnalysis.csv","ftp://168.154.221.100/OPI/FwdCurveAnalysis.csv", userpw="irms_ftp:!@#qwe123")
conn <-odbcConnect("IRMS_TEST", uid="QUOT_VIEW_FOR_OPI", pwd="456opi$%^")
sqlQuery(conn, "exec [dbo].[USP_BATCH_FWDCURVE_TO_TB_MST_QUOT]")
odbcClose(conn)
install.packages("RCurl")
source('D:/IRMS_R/BatchProcessOfFwdStrAnalysis.R', echo=TRUE)
